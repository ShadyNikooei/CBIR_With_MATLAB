function resize_dataset(input_folder, output_folder, target_size)
    % This function resizes all images in a dataset to the same size
    % after cropping them to the largest bounding box of non-zero regions.
    %
    % input_folder: path to original dataset
    % output_folder: path to save resized images
    % target_size: desired output size (e.g., [256 256])

    if ~exist(output_folder, 'dir')
        mkdir(output_folder);
    end
    
    imageFiles = dir(fullfile(input_folder, '*.jpg'));
    
    for i = 1:length(imageFiles)
        % Read image
        img = imread(fullfile(input_folder, imageFiles(i).name));
        
        % Convert to grayscale for processing
        if size(img,3) == 3
            gray = rgb2gray(img);
        else
            gray = img;
        end

        % Create binary mask
        bw = imbinarize(gray); 
        %props = regionprops(bw,'BoundingBox');
        
        %if ~isempty(props)
            % Select the largest bounding box
          %  [~,idx] = max(arrayfun(@(x) x.BoundingBox(3)*x.BoundingBox(4),props));
          %  bbox = round(props(idx).BoundingBox);
            
            % Crop the image to the bounding box
          %  cropped = imcrop(img, bbox);
        else
            % If no bounding box is found, use the original image
            cropped = img;
        end
        
        % Resize to the target size
        resized = imresize(cropped, target_size);
        
        % Save the resized image
        imwrite(resized, fullfile(output_folder, imageFiles(i).name));
    end
    
    disp("All images resized and saved to output folder.");
end
